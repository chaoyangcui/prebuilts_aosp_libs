# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/toolchain/toolchain.gni")

config("libc++_config") {
  include_dirs = [ "include" ]
}

ohos_prebuilt_shared_library("libcxx") {
  if (current_os == "ohos") {
    if (current_cpu == "arm") {
      source = "arm/libc++.so"
    } else if (current_cpu == "x86_64") {
      source = "x86_64/libc++.so"
    } else {
      source = "arm64/libc++.so"
    }
  } else if (current_os == "linux") {
    if (current_cpu == "x86") {
      source = "linux_x86/libc++.so"
    } else {
      source = "linux_x86_64/libc++.so"
    }
  } else if (current_os == "mac") {
    source = "darwin_x86/libc++.dylib"
  }
  assert(defined(source))
  public_configs = [ ":libc++_config" ]
  subsystem_name = "a_sdk"
  install_enable = false
}

ohos_prebuilt_static_library("libc++_static") {
  if (current_os == "ohos") {
    if (current_cpu == "arm") {
      source = "arm/libc++_static.a"
    } else if (current_cpu == "x86_64") {
      source = "x86_64/libc++_static.a"
    } else {
      source = "arm64/libc++_static.a"
    }
  } else if (current_os == "linux") {
    if (current_cpu == "x86") {
      source = "linux_x86/libc++_static.a"
    } else {
      source = "linux_x86_64/libc++_static.a"
    }
  } else if (current_os == "mac") {
    source = "darwin_x86/libc++_static.a"
  }
  assert(defined(source))
  public_configs = [ ":libc++_config" ]
  subsystem_name = "a_sdk"
}
